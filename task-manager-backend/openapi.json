{
  "openapi": "3.0.0",
  "info": {
    "title": "Seek Challenge API",
    "description": "API for managing tasks",
    "version": "1.0"
  },
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account and returns a JWT token.",
        "requestBody": {
          "description": "User registration details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email", "example": "seek@challenge.com" },
                  "password": { "type": "string", "example": "SeekChallenge" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error (e.g., invalid email or password)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "1 validation error for UserCreate..." }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Log in a user",
        "description": "Authenticates a user and returns a JWT token.",
        "requestBody": {
          "description": "User login credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email", "example": "seek@challenge.com" },
                  "password": { "type": "string", "example": "SeekChallenge" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Invalid credentials" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get all tasks for the authenticated user",
        "description": "Returns a list of tasks.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token in 'Bearer <token>' format",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "title": { "type": "string" },
                      "description": { "type": "string" },
                      "status": { "type": "string", "enum": ["todo", "in_progress", "completed"] }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Unauthorized: Invalid token" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new task",
        "description": "Adds a task for the authenticated user.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token in 'Bearer <token>' format",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Task creation details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": { "type": "string", "example": "New Task" },
                  "description": { "type": "string", "example": "Task description" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "title": { "type": "string" },
                    "description": { "type": "string" },
                    "status": { "type": "string" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error (e.g., missing title)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Extra inputs are not permitted" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "put": {
        "summary": "Update an existing task",
        "description": "Modifies a task by ID for the authenticated user.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token in 'Bearer <token>' format",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Task update details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string", "example": "Updated Task" },
                  "description": { "type": "string", "example": "Updated description" },
                  "status": { "type": "string", "enum": ["todo", "in_progress", "completed"], "example": "completed" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "title": { "type": "string" },
                    "description": { "type": "string" },
                    "status": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Task not found" }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "description": "Removes a task by ID for the authenticated user.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token in 'Bearer <token>' format",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Task not found" }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}